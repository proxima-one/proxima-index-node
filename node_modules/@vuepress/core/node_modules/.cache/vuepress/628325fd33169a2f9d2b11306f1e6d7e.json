{"remainingRequest":"/Users/chasesmith/Desktop/temp-projects/proxima-db-docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/chasesmith/Desktop/temp-projects/proxima-db-docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/chasesmith/Desktop/temp-projects/proxima-db-docs/docs/Architecture.md?vue&type=template&id=3bdc27f6&","dependencies":[{"path":"/Users/chasesmith/Desktop/temp-projects/proxima-db-docs/docs/Architecture.md","mtime":1561345208905},{"path":"/Users/chasesmith/Desktop/temp-projects/proxima-db-docs/node_modules/cache-loader/dist/cjs.js","mtime":1561230155078},{"path":"/Users/chasesmith/Desktop/temp-projects/proxima-db-docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1561230155569},{"path":"/Users/chasesmith/Desktop/temp-projects/proxima-db-docs/node_modules/cache-loader/dist/cjs.js","mtime":1561230155078},{"path":"/Users/chasesmith/Desktop/temp-projects/proxima-db-docs/node_modules/vue-loader/lib/index.js","mtime":1561230155569},{"path":"/Users/chasesmith/Desktop/temp-projects/proxima-db-docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1561255335242}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}